# Copyright Krack8, Inc. All Rights Reserved.
## @section Global parameters

global:
  runMode: "PRODUCTION"
  image:
    repository: ghcr.io/krack8/lighthouse
    pullPolicy: IfNotPresent
  ## @param global.resources Set container requests and limits for different resources like CPU or memory
  ## e.g:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override the lighthouse.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override the lighthouse.fullname
##
fullnameOverride: ""

## @section Database parameters

db:
  mongo:
    internal:
      enabled: true
      replicaCount: 1
      image:
        repository: "mongo"
        pullPolicy: "IfNotPresent"
        tag: latest
      auth:
        username: ""
        password: ""
        databaseName: "lighthouse"
      persistence:
        size: 1Gi
        storageClassName: ""
        annotations: {}
        accessMode: ReadWriteOnce
      port: 27017
      targetPort: 27017
    external:
      enabled: false
      uri: ""
      databaseName: "lighthouse"

## @section User parameters

user:
  email: ""
  password: ""

## @section Controller parameters

controller:
  enabled: false
  replicaCount: 1
  revisionHistoryLimit: 0
  apiEndpoint: ""
  resources: {}
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  grpc:
    port: 50051
    targetPort: 50051
  image:
    repository: ""
    pullPolicy: ""
    tag: ""
  webapp:
    replicaCount: 1
    revisionHistoryLimit: 0
    resources: {}
    service:
      type: ClusterIP
      port: 80
      targetPort: 8000
    image:
      repository: ""
      pullPolicy: ""
      tag: ""

## @section Agent parameters

agent:
  enabled: false
  replicaCount: 1
  revisionHistoryLimit: 0
  resources: {}
  group: ""
  defaultClusterName: ""
  service:
    port: 8080
  image:
    repository: ""
    pullPolicy: ""
    tag: ""

## @section Agent Config parameters

config:
  controller:
    grpc:
      host: ""
      tls:
        enabled: false
        skipVerification: true
        ca: ""

## @section Agent Auth parameters

auth:
  token: ""

## @section Ingress parameters

ingress:
  enabled: false
  apiVersion: ""
  ## e.g:
  ## annotations:
  ##   nginx.ingress.kubernetes.io/rewrite-target: /
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ingressClassName: ""
  hostname: ""
  pathType: ImplementationSpecific
  tls:
    enabled: false
    secretName: ""
    crt: ""
    key: ""
    ca: ""

## @section Ingress gRPC parameters

ingressGrpc:
  enabled: false
  ## e.g:
  ## annotations:
  ##   nginx.ingress.kubernetes.io/rewrite-target: /
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ingressClassName: ""
  hostname: ""
  pathType: ImplementationSpecific
  tls:
    enabled: false
    secretName: ""
    crt: ""
    key: ""
    ca: ""