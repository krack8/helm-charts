# Copyright Krack8, Inc. All Rights Reserved.
global:
  runMode: "PRODUCTION"
  image:
    repository: quay.io/klovercloud/krack8
    pullPolicy: IfNotPresent
  ## @param global.resources Set container requests and limits for different resources like CPU or memory
  ## e.g:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ingress:
    apiVersion: ""
    ## @param global.ingress.annotations Set annotations for ingress
    ## e.g:
    ## annotations:
    ##   nginx.ingress.kubernetes.io/rewrite-target: /
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ingressClassName: ""
    pathType: ImplementationSpecific
    tls:
      enabled: false
      secretName: ""
      crt: ""
      key: ""
      ca: ""
  ingressGrpc:
    ## e.g:
    ## annotations:
    ##   nginx.ingress.kubernetes.io/rewrite-target: /
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ingressClassName: ""
    pathType: ImplementationSpecific
    tls:
      enabled: false
      useIngressTls: false
      secretName: ""
      crt: ""
      key: ""
      ca: ""
  kubeVersion: ""

db:
  mongo:
    create: false
    replicaCount: 1
    image:
      repository: "mongo"
      pullPolicy: "IfNotPresent"
      tag: latest
    rootUser:
      username: ""
      password: ""
      generatedPassword: ""
    persistence:
      size: 1Gi
      storageClassName: ""
      annotations: {}
    port: 27017
    targetPort: 27017
    uri: ""
    databaseName: ""

user:
  email: ""
  password: ""

server:
  enabled: false
  replicaCount: 1
  revisionHistoryLimit: 0
  url: ""
  apiEndpoint: ""
  resources: {}
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
  grpc:
    port: 50051
    targetPort: 50051
  image:
    repository: ""
    pullPolicy: ""
    tag: lighthouse-controller-v1.0.0
  ingress:
    enabled: false
    createCombinedIngress: false
    apiVersion: ""
    ## e.g:
    ## annotations:
    ##   nginx.ingress.kubernetes.io/rewrite-target: /
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ingressClassName: ""
    hostname: ""
    path: /api
    pathType: ImplementationSpecific
    tls:
      enabled: false
      secretName: ""
      crt: ""
      key: ""
      ca: ""
  ingressGrpc:
    enabled: false
    ## e.g:
    ## annotations:
    ##   nginx.ingress.kubernetes.io/rewrite-target: /
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ingressClassName: ""
    hostname: ""
    path: /
    pathType: ImplementationSpecific
    tls:
      enabled: false
      useIngressTls: false
      secretName: ""
      crt: ""
      key: ""
      ca: ""
  webapp:
    replicaCount: 1
    revisionHistoryLimit: 0
    resources: {}
    service:
      type: ClusterIP
      port: 80
      targetPort: 8000
    image:
      repository: ""
      pullPolicy: ""
      tag: lighthouse-webapp-v1.0.0
    ingress:
      enabled: false
      apiVersion: ""
      ## e.g:
      ## annotations:
      ##   nginx.ingress.kubernetes.io/rewrite-target: /
      ##   cert-manager.io/cluster-issuer: cluster-issuer-name
      ##
      annotations: { }
      ingressClassName: ""
      hostname: ""
      path: /
      pathType: ImplementationSpecific
      tls:
        enabled: false
        secretName: ""
        crt: ""
        key: ""
        ca: ""

agent:
  enabled: false
  group: ""
  defaultClusterName: ""
  replicaCount: 1
  revisionHistoryLimit: 0
  url: ""
  resources: {}
  connectServerInternally: false
  skipServerTlsVerification: false
  service:
    type: ClusterIP
    port: 8080
  image:
    repository: ""
    pullPolicy: ""
    tag: lighthouse-agent-v1.0.0

auth:
  enabled: false
  token: ""
