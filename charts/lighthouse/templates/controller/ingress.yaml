{{- /*
  Copyright Krack8, Inc. All Rights Reserved.
*/}}
{{- if and (eq .Values.controller.enabled true) (eq .Values.ingress.enabled true) -}}
apiVersion: {{ include "ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "lighthouse.controller.ingress.name" . }}
  namespace: {{ include "lighthouse.namespace" . }}
  labels:
    {{- include "lighthouse.controller.labels" . | nindent 4 }}
  {{- if .Values.ingress.annotations }}
  annotations:
     {{- $annotations := .Values.ingress.annotations }}
     {{- range $key, $value := $annotations }}
     {{ $key }}: {{ $value | quote }}
     {{- end }}
  {{- end }}
spec:
  {{- if (eq "true" (include "ingress.supportsIngressClassname" .)) }}
    {{- if .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName | toString | quote }}
    {{- end }}
  {{- end }}
  rules:
      {{- if .Values.ingress.hostname }}
    - host: {{ .Values.ingress.hostname }}
      http:
        paths:
          - path: /
              {{- if eq "true" (include "ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
              {{- end }}
            backend: {{- include "ingress.backend" (dict "ingressApiVersion" (include "ingress.apiVersion" .) "serviceName" (include "lighthouse.webapp.name" .) "servicePort" .Values.controller.webapp.service.port . $)  | nindent 14 }}
          - path: /api
              {{- if eq "true" (include "ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
              {{- end }}
            backend: {{- include "ingress.backend" (dict "ingressApiVersion" (include "ingress.apiVersion" .) "serviceName" (include "lighthouse.controller.name" .) "servicePort" .Values.controller.service.port . $)  | nindent 14 }}
          - path: /ws
              {{- if eq "true" (include "ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
              {{- end }}
            backend: {{- include "ingress.backend" (dict "ingressApiVersion" (include "ingress.apiVersion" .) "serviceName" (include "lighthouse.controller.name" .) "servicePort" .Values.controller.service.port . $)  | nindent 14 }}
      {{- end }}
    {{- if eq .Values.ingress.tls.enabled true }}
  tls:
    - hosts:
        - {{ .Values.ingress.hostname }}
      secretName: {{ include "lighthouse.controller.ingress.tls.secretName" . }}
    {{- end }}
{{- end }}
